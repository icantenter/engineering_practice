2020/5/21 修改了data.h,data.cpp,game.cpp,GasterBlaster.h
MovealbeRect.h,Settings.h,simple_game.h,SnakeRect.h
文件 新增direction.h

思考访问限制符的合理使用
共有函数的编写是否冗余

大致花了三个小时修改文件
效率太低


2020/5/22
上网查了一下
OOP的风格是封装，隐藏数据。
也就是把联系紧密的数据放在类里(高内聚)
只要接口合理，就把实现难度放在第二位(客户/服务器模型)

2020/5/25
删除了data.cpp data.h 新增DataBase.h
了解了面向对象的基本原则，包括kiss(keep it simple && stupid)
里氏代换(任何基类可以出现的地方，子类一定可以出现)
知乎上是说，面向对象的类是接口相同的一类，而不是生活中的分类，是归一性。(存疑)
封装是为了各司其职，是用户和类创建者的协议。
private并不是越多越好。
谨慎使用继承，否则各种依赖会出bug.

2020/5/26
面向对象是思想。
是抽象(但是是对程序而言)
比如有的问题能列表解决，再增加新功能时，增加一两条数据就可以的。
如果非要弄出很多派生类，就会把事情弄复杂。
只有在写之前，去真正的抽象，去思考才行。
而不是开头写个class